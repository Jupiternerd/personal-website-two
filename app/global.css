:root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
}

body {
    color: rgb(var(--foreground-rgb));
    background: linear-gradient(to bottom,
            transparent,
            rgb(var(--background-end-rgb))) rgb(var(--background-start-rgb));
}

body, html {
    overflow-x: hidden;
    overflow-y: hidden;
    cursor: none;
}

a {
    color: white;
    position: relative;
    text-decoration: none;
    cursor: none
}

a::before {
    content: "";
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 1px;
    background-color: white;
    transition: width 0.4s ease-in-out;
}

a:hover::before {
    width: 100%;
}

/* For the cursor overlay effect */
a::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    cursor: var(--custom-cursor-filled);
    opacity: 0;
    pointer-events: none;
    /* This ensures the pseudo-element doesn't interfere with the link's clickability */
}

a:hover::after {
    opacity: 1;
}


/* Custom Cursor */

#customCursor {
    width: 30px;
    height: 30px;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30"><text x="0" y="20" font-size="20" fill="white" transform="rotate(45 12 12)">â—¯</text></svg>');
    position: absolute;
    pointer-events: none;
    /* Important so it doesn't interfere with click events */
    z-index: 9999;
    /* Keep it above other elements */
    mix-blend-mode: difference;
    /* This will invert the cursor color based on background */
}

/* Media */

/* Larger screen sizes */
@media (min-width: 1024px) {
    .scene {
        width: 70vw;
        height: 50vh;
    }
}

/* Smaller screen sizes */
@media (max-width: 768px) {
    .scene {
        width: 90vw;
        height: 70vh;
    }
}